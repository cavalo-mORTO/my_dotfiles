#!/bin/bash

# theme to be loaded
theme="${1}"

xresources=~/.Xresources
nvim_dir=~/.config/nvim/
termite_dir=~/.config/termite/


# specify the directories where the themes reside for each app
nvim=~/.config/nvim/colors/
X=~/.Xresources.d/
termite=~/.config/termite/themes/


paths=($nvim $X $termite)

# check if the theme exists
function check_themes {
	for path in ${paths[@]}; do
		file="${path}${1}"
		[[ "$path" = "$nvim" ]] && file="${file}.vim"
		[[ ! -e $file ]] && return 1
	done

	return 0
}

# if only 1 of themes fails the script ends without modifying anything
if ! check_themes ${theme}; then echo "No theme"; exit 1; fi

# load nvim theme
echo "colorscheme ${theme}" > "${nvim_dir}colorscheme.vim"

# check if include exists in ~/.Xresources
if ! grep -e '^#include' "${xresources}" > /dev/null; then echo "#include" >> "${xresources}"; fi

# load new Xresources theme
theme_path="${X}${theme}"
sed -i 's?.*#include.*?#include "'${theme_path}'"?' "${xresources}"
xrdb -load "${xresources}"

# backup termite config ignoring colors
bak=$(sed "/\[colors\]/Q" "${termite_dir}config")
echo "${bak}" > /tmp/termite.config.bak

# load the new config
theme_path="${termite}${theme}"
cat /tmp/termite.config.bak "${theme_path}" > "${termite_dir}config"
killall -USR1 termite
